<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Vps | Bits, Bytes, and Words]]></title>
  <link href="http://blog.zimmerman.io/categories/vps/atom.xml" rel="self"/>
  <link href="http://blog.zimmerman.io/"/>
  <updated>2014-06-25T00:00:56-04:00</updated>
  <id>http://blog.zimmerman.io/</id>
  <author>
    <name><![CDATA[Jake Zimmerman]]></name>
    <email><![CDATA[jake@zimmerman.io]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Running a VPS: Log 2]]></title>
    <link href="http://blog.zimmerman.io/2014/06/24/running-a-vps-log-2/"/>
    <updated>2014-06-24T23:11:14-04:00</updated>
    <id>http://blog.zimmerman.io/2014/06/24/running-a-vps-log-2</id>
    <content type="html"><![CDATA[<h1>Seriously: Back It Up</h1>

<p>I don&rsquo;t have the best track record with configuring servers. I&rsquo;ve certainly brought down a ScottyLabs server or two before, but sometimes there&rsquo;s no avoiding that in the sake of learning. At times like these, you&rsquo;ve just gotta reboot and try again. With DigitalOcean&rsquo;s auto-backups though, this process is incredibly easy.</p>

<!-- more -->


<h2>EncFS Troubles</h2>

<p>As part of my eventual goal of hosting my own mail, I tried following <a href="//sealedabstract.com/code/nsa-proof-your-e-mail-in-2-hours/">this post</a> to set up a mail server on my VPS. Unfortunately, I never even made it out the gates. The first step is to install and set up EncFS for letting you mount encrypted filesystems, which the tutorial was planning on using to store email securely. Unfortunately, after following the steps listed to a T, my poor VPS whined and complained about being misconfigured.</p>

<p>My first attempt to do something cool on this new VPS was a dud. All I had to show for it was a muddled, no-longer-pristine VPS with some packages and libraries that simply didn&rsquo;t work. If I were to continue with the tutorial by skipping this step, I would have never known whether the cause of any future issue was something misconfigured at this step.</p>

<h2>The Day is Saved</h2>

<p>But then I remembered: DigitalOcean is automatically backing up my droplet! After logging into the web interface, all I had to do was click a button and my whole system was reset to the way it looked 24 hours prior. It was <em>actually that easy</em>.</p>

<p>Thus, for anyone getting started with a new server, whether it be on DigitalOcean or any other service (even a box you have running in your room), I cannot stress enough the value of automatic&mdash;or at least regular&mdash;backups. Not only is this a good idea to preserve data in the event of an outage, but it lends a seemingly unbounded ability to mess around and tinker.</p>

<p>What this means is that you get all the fun of learning cool, new Linux-y things, but without ever having to worry about whether you&rsquo;ll break the whole system. Sure, this mindset isn&rsquo;t necessarily the best to adopt for a production machine, but for my circumstances, all I want is free reign to experiment and break things to my heart&rsquo;s content.</p>

<h2>Back to Square One</h2>

<p>With my first attempt at installing a mail server foiled, I think for my next attempt I&rsquo;ll try a different path. Instead of installing and configuring everything more or less manually (I really wanted to do this for the experience of it all, learning the nitty-gritty of how it works), this time around I think I&rsquo;m going to give <a href="https://github.com/al3x/sovereign">sovereign</a> a try. I&rsquo;ve heard good things, and it is in fact based on the original tutorial I had found, so it&rsquo;s looking pretty promising as of yet.</p>

<p>Whatever happens though, I&rsquo;m feeling pretty good about the fact that I can turn things around with a single click.</p>

<p>- - - - -
<br>
### Jake on the Web
<a href="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg"><img class="left" src="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg" width="135" height="135"></a>
If you cared enough to read that far, you should consider following me on [Twitter][t], checking out my tinkerings on [GitHub][g], or paying a visit to [my homepage][h]. I'd love to hear what you think about what I've managed to put together, so feel free to comment, tweet at me, or send me an email.
 [t]: http://www.twitter.com/Z1MM32M4N/
 [g]: http://www.github.com/Z1MM32M4N/
 [h]: http://www.zimmerman.io/
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running a VPS: Log 1]]></title>
    <link href="http://blog.zimmerman.io/2014/06/19/running-a-vps-log-1/"/>
    <updated>2014-06-19T23:10:51-04:00</updated>
    <id>http://blog.zimmerman.io/2014/06/19/running-a-vps-log-1</id>
    <content type="html"><![CDATA[<h1>Managing Dotfiles Across Machines</h1>

<p>You could say I&rsquo;m a bit of a geek when it comes to configuring my terminal environment; this obsession has led me to concoct ever-elaborate setup scripts and configuration files. On top of this, between my laptop&rsquo;s multiple boot environments, the servers I use for school, work, and ScottyLabs, and now <a href="/2014/06/19/running-a-vps-log-0">metagross</a>, keeping my configuration files in sync is a must. I handle it swiftly using a combination of git and rcm.</p>

<!-- more -->


<h2>My Scripts</h2>

<p>I&rsquo;ve put a decent amount of time into my dotfiles. I like to think they&rsquo;re pretty good. That being said, I&rsquo;m not about to go over every piece of them, because that would bore even me. I might come back to these pieces in a series on getting started with the terminal (aimed at incoming CS freshmen and other up-and-coming hackers), but for now, a link will suffice.</p>

<h4><a href="https://github.com/Z1MM32M4N/dotfiles/">Z1MM32M4N/dotfiles</a></h4>

<h2>rcm + git</h2>

<p>rcm, short for rc file (as in .bash<b>rc</b>, .vim<b>rc</b>) management, is a tool that manages symlinks between dotfiles in one directory and your home directory. This is cool because, once all your config files contained in one folder, they can be tracked with git for version control without having to put your entire <code>$HOME</code> directory inside a git repo.</p>

<p>On a single machine, rcm works like this. You have one directory (usually <code>~/.dotfiles</code>, but configurable to any directory) which stores all the config files. In here, all files which are meant to be tracked and symlinked do <em>not</em> include the prefixed &lsquo;<code>.</code>&rsquo;; instead, it is added as part of the linking process. After installation, which is easily handled through the brew formula, the .deb, or the Makefile, there are a couple of new tools available.</p>

<p>The first worth mentioning is <code>man 7 rcm</code>, which documents what was just installed. Taking a glance at this page, we see that rcm is actually a suite of tools: <code>lsrc</code>, <code>mkrc</code>, <code>rcdn</code>, and <code>rcup</code>. While all these tools are useful, the most important is <code>rcup</code>. After collecting all your dotfiles into <code>~/.dotfiles</code>, simply executing <code>rcup</code> symlinks all the necessary files to their appropriate locations.</p>

<p>From here, you get all the benefits of git, like pushing to GitHub, collaborating with others, lightweight branching, and syncing files easily even when your workflow is distributed across many servers.</p>

<h2>Caveats</h2>

<p>To be fair, I don&rsquo;t use <code>rcm</code> in the way I think it&rsquo;s creators imagined it would be used. Specifically, the software includes certain provisions to designate which files should affect various machines using a tag system. While it could possibly work, in my mind it&rsquo;s much more tedious than what I&rsquo;ve come up with.</p>

<p>Succinctly, the issue is this: when cloning a repo and running <code>rcup</code> for the first time, you can&rsquo;t easily say &ldquo;this is my VPS, it&rsquo;s running Debian GNU/Linux, has these system binaries installed, and therefore should start up using these methods and scripts&rdquo;. For this, we&rsquo;re on our own.</p>

<h2>Installation</h2>

<p>The solution I came up with regarding a multiple-environment workflow deals with handling all the necessary machine-dependent configuration within my dotfiles <em>themselves</em>. That way I can minimize code reuse and have everything in one convenient file. As a result, <a href="https://github.com/Z1MM32M4N/dotfiles/tree/master/bash_profile">my bash_profile</a> is a bit lengthy at about 300 lines, and it has three large case statements, but I make all this up through deployment. Deployment is <strong>incredibly</strong> swift. Again, You can take a look at the file to see how it works, but when I had finished <a href="/2014/06/19/running-a-vps-log-1">locking down my server</a>, these are the only configuration commands I had to run:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Installing rcm and dotfiles </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;install rcm using deb and dpkg&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>wget &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://thoughtbot.github.io/rcm/debs/rcm_1.2.3-1_all.deb&quot;</span>&gt;https://thoughtbot.github.io/rcm/debs/rcm_1.2.3-1_all.deb&lt;/a&gt;
</span><span class='line'><span class="nv">$ </span>sudo dpkg -i rcm_1.2.3-1_all.deb&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;clone dotfiles down, into the ~/.dotfiles directory&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>git clone &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://github.com/Z1MM32M4N/dotfiles&quot;</span>&gt;https://github.com/Z1MM32M4N/dotfiles&lt;/a&gt; ~/.dotfiles&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;make the symlinks&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>rcup
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Voilà! After that, I had my sick bash prompt, my <a href="/2014/06/11/update-your-software-its-the-law/">snazzy update function</a>, my delightful vim colorscheme, solarized dir colors&mdash;the list goes on and on.</p>

<p>Sure, it&rsquo;s taken a bit of effort to get the point where I can run these commands and have it Just Work, but doing that work once means that from now on, whenever I sit down at a new work computer, a new VPS, a new laptop, or some other workstation, I&rsquo;m only a few commands away from my favorite settings.</p>

<p>- - - - -
<br>
### Jake on the Web
<a href="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg"><img class="left" src="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg" width="135" height="135"></a>
If you cared enough to read that far, you should consider following me on [Twitter][t], checking out my tinkerings on [GitHub][g], or paying a visit to [my homepage][h]. I'd love to hear what you think about what I've managed to put together, so feel free to comment, tweet at me, or send me an email.
 [t]: http://www.twitter.com/Z1MM32M4N/
 [g]: http://www.github.com/Z1MM32M4N/
 [h]: http://www.zimmerman.io/
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running a VPS: Log 0]]></title>
    <link href="http://blog.zimmerman.io/2014/06/19/running-a-vps-log-0/"/>
    <updated>2014-06-19T21:45:29-04:00</updated>
    <id>http://blog.zimmerman.io/2014/06/19/running-a-vps-log-0</id>
    <content type="html"><![CDATA[<p>Since last Christmas, I&rsquo;ve had a raspberry pi running as a server at my home back in Wisconsin. I had tons of plans for this little guy, but I quickly discovered that he was going to be a bit <em>too</em> little for most of them. Thus, I am now the proud sysadmin of my own virtual private server.</p>

<!-- more -->


<h2>Hosting</h2>

<p>Because at this point in my life I&rsquo;m moving around too much to host my own server somewhere, I decided to contract this part out. I didn&rsquo;t look around too much at VPS providers, but I eventually settled in on DigitalOcean, because it was both recommended at the CClub talk and the most cost-effective of the all the providers I checked. For $10 per month I get a 1-core processor, 1GB of RAM, 30GB of SSD storage, and 2TB of network data transfer. More than enough for a casual VPS.</p>

<h2><a href="http://plusbryan.com/my-first-5-minutes-on-a-server-or-essential-security-for-linux-servers">Safety First</a></h2>

<p>Especially in light of recent security and privacy breeches, the first thing to do on any server is to lock it down. For that, I followed <a href="http://plusbryan.com/my-first-5-minutes-on-a-server-or-essential-security-for-linux-servers">these instructions</a>, with a few modifications.</p>

<p>The post goes over setting up a few simple daemons and setup commands that can be completed in 5 minutes if you&rsquo;ve done this before or half an hour if you want to stop and read up on all the protocols as you go. While I won&rsquo;t reiterate the steps, the list includes setting up the root and an additional sudo user, installing <a href="http://www.fail2ban.org/wiki/index.php/Main_Page">fail2ban</a> for combating brute-force login attempts, setting up ssh logins, setting up a firewall with <a href="https://wiki.ubuntu.com/UncomplicatedFirewall">Uncomplicated Firewall</a>, and a few other sanity checks.</p>

<h2>Personalization</h2>

<p>At this point, the server was safe, but I still couldn&rsquo;t call it &ldquo;mine.&rdquo; My .bash_profile, .vimrc, and all my other configuration scripts were missing. Fortunately, I had prepared for this moment, and getting everything in working order was incredibly easy. Because there&rsquo;s so much to talk about, I&rsquo;ll be [writing about it] in another post, but in the meantime, I&rsquo;m using a program called <a href="https://github.com/thoughtbot/rcm">rcm</a> that turns <a href="https://github.com/Z1MM32M4N/dotfiles">GitHub</a> into the perfect place to store configuration scripts.</p>

<p>I also spent a long time pondering the consequences of <a href="http://xkcd.com/910/">this comic</a>. Eventually I settled on the name of my favorite Pokemon: Metagross. So without further ado, I&rsquo;d like to introduce my shiny new login message:</p>

<center>
<a href="/images/metagross-motd.png"><img src="/images/metagross-motd.png"></a>
</center>


<h2>Onwards</h2>

<p>So there we are! I&rsquo;ve got a bunch of things in the works and even more things planned, so it should be a nice, long-running summer project.</p>

<hr />

<h3>For the Curious</h3>

<p>While I didn&rsquo;t end up using my raspberry pi very extensively, I did manage to get a few things out of it. For one, it gave me my first experiences using Arch Linux. Admittedly, I didn&rsquo;t get the full experience as it came essentially pre-loaded with it, but it was an experience nonetheless. At some point, once I&rsquo;ve settled into living in one place for more than a few months, I plan on building a desktop and running Arch for the lulz.</p>

<p>Also, and this part is still the biggest reason why I keep it up, is that I can run the No-IP Dynamic Update Client as a daemon to keep tabs on the public IP address for my house back in Wisconsin. This lets me do cool things, like ssh into my raspi from anywhere, administer my family&rsquo;s wireless router when it breaks, and potentially log into one of their computers if I needed to (although whenever I do remote into their computer&rsquo;s, I almost always use the Chrome Remote Desktop Client because it&rsquo;s incredibly easy to use but still entirely full-featured).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Summer Project Series]]></title>
    <link href="http://blog.zimmerman.io/2014/06/19/summer-project-series/"/>
    <updated>2014-06-19T20:16:18-04:00</updated>
    <id>http://blog.zimmerman.io/2014/06/19/summer-project-series</id>
    <content type="html"><![CDATA[<p>After spending most of the beginning of the summer flying, driving, moving, moving again, riding trains, riding different trains, and starting a new job, it&rsquo;s finally time to start working on some cool side projects.</p>

<!-- more -->


<h1>Projects</h1>

<p>This page will just serve as a list of links to various posts grouped by project. Hopefully you can find something that interests you!</p>

<h2>Running a VPS</h2>

<p>Inspired in part by the <a href="http://www.club.cc.cmu.edu/talks/vps.html">Computer Club talk</a> and in part by my inability to do anything quickly on a raspberry pi, I recently decided to rent out a VPS from DigitalOcean. Read on for notes and ramblings about what I&rsquo;m using it for.</p>

<ul>
<li><a href="/2014/06/19/running-a-vps-log-0/">Running a VPS: Log 0 &ndash; Initial Setup</a></li>
<li><a href="/2014/06/19/running-a-vps-log-1/">Running a VPS: Log 1 &ndash; Managing Dotfiles Across Machines</a></li>
</ul>


<h2>JavaScript Adventures</h2>

<p>Over at ScottyLabs, we&rsquo;re planning some super awesome talks and labs to teach web development during the upcoming semester, so I&rsquo;ve been hard at work compiling and writing some awesome JavaScript demos, resources, and projects.</p>

<ul>
<li><a href="/2014/06/16/why-everyone-loves-javascript/">Why Everyone Loves JavaScript</a></li>
</ul>


<hr />

<h2>Print@ScottyLabs</h2>

<p>Okay, so I haven&rsquo;t actually started this one yet, but I will be soon! I&rsquo;ll be rewriting the service from just about the ground up, adding tons of cool features along the way.</p>

<p>In the mean time, if mail servers, Python 3, and Django are your thing, you may want to check out the following links that I&rsquo;ve come across while doing a bit of research.</p>

<ul>
<li><strong> <a href="https://docs.python.org/3/whatsnew/3.4.html#whatsnew-email-contentmanager">Python 3.4.1 and MIME Multipart Messages</a> </strong></li>
<li><strong> <a href="https://docs.djangoproject.com/en/dev/releases/1.7/">Django 1.7 to include built-in schema migrations</a> </strong></li>
</ul>


<p>- - - - -
<br>
### Jake on the Web
<a href="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg"><img class="left" src="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg" width="135" height="135"></a>
If you cared enough to read that far, you should consider following me on [Twitter][t], checking out my tinkerings on [GitHub][g], or paying a visit to [my homepage][h]. I'd love to hear what you think about what I've managed to put together, so feel free to comment, tweet at me, or send me an email.
 [t]: http://www.twitter.com/Z1MM32M4N/
 [g]: http://www.github.com/Z1MM32M4N/
 [h]: http://www.zimmerman.io/
</p>
]]></content>
  </entry>
  
</feed>
